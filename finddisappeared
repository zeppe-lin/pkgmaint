#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long qw(:config gnu_compat);
use File::Basename;

my $PROGRAM = basename $0;
my $VERSION = '@VERSION@';

######################################################################
# Find disappeared files.                                            #
######################################################################

sub finddisappeared {
	my $root = shift || '';
	my $pkgdb = "$root/var/lib/pkg/db";

	open my $fh, "<", $pkgdb
		or die "$PROGRAM: couldn't open package database ($pkgdb): $!\n";

	local $/ = ""; # read files paragraph-wise
	while (<$fh>) {
		my ($name, $version, @footprint) = split /\n/;

		my @missing = grep ! -e "$root/$_", @footprint;
		next unless @missing;

		print map "$name: /$_\n", @missing;
	}
	close $fh;
}

######################################################################
# Command-line helpers.                                              #
######################################################################

sub print_version {
	print "$PROGRAM (pkgmaint) $VERSION\n";
}

sub print_help {
	print <<EOF;
Usage: $PROGRAM [-r rootdir]
       $PROGRAM [-v]
       $PROGRAM [-h]
Find files that are owned by package manager but somehow disappeared.

Mandatory arguments to long options are mandatory for short options too.
  -r, --root=rootdir  specify an alternate root directory
  -v, --version       print version and exit
  -h, --help          print help and exit
EOF
}

sub main {
	GetOptions(
		"r|root=s"  => \my $opt_root,
		"v|version" => \my $opt_version,
		"h|help"    => \my $opt_help,
	) or die "$PROGRAM: error in command-line arguments\n";

	print_version() and exit if $opt_version;
	print_help()    and exit if $opt_help;

	die "$PROGRAM: invalid option @ARGV\n" if @ARGV;

	finddisappeared $opt_root;
}

######################################################################

main() if not caller();
1;

# vim: cc=72 tw=70
# End of file.
