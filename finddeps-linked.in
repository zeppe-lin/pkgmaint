#!/bin/sh
# This file is a part of pkgmaint.
# See COPYING and COPYRIGHT files for corresponding information.

export LD_LIBRARY_PATH="/lib:/usr/lib:/lib32:/usr/lib32:$LD_LIBRARY_PATH"

finddeps() {
	# https://tldp.org/LDP/abs/html/exitcodes.html
	# 126 - Command invoked cannot execute.
	TMPFILE1=$(mktemp) || exit 126
	TMPFILE2=$(mktemp) || exit 126

	# XXX FIXME awk not working?!
	pkginfo -l "$1" | awk '/(bin|sbin|lib|lib32)/{print $1}'      |
		xargs -I {} -P "${JOBS:-1}" ldd -- "/{}" 2>/dev/null  |
		awk '!/(linux-gate)|( dynamic)|(not found)/{
			printf "%s\n", $3
		}' >> "$TMPFILE1"

	xargs -a "$TMPFILE1" -I{} -r -P "${JOBS:-1}" readlink -f "{}" |
		sort | uniq > "$TMPFILE2"

	xargs -a "$TMPFILE2" -I{} -r -P "${JOBS:-1}" pkginfo -o "{}"  |
		awk '!/^(Package|pkginfo: no owner)/{print $1}'       |
		sort | uniq

	# Additional deps that can't be found by ldd(8).
	pkginfo -l "$1" | while read -r line; do
		case $line in
		usr/share/gir-1.0/*.gir)    echo "gobject-introspection" ;;
		usr/share/vala/vapi/*.vapi) echo "vala" ;;
		esac
	done | sort -u
}

print_help() {
	cat <<EOF
Usage: finddeps-linked [OPTION] PKGNAME
Find linked dependencies for a package.

  -v, --version   print version and exit
  -h, --help      print help and exit
EOF
}

main() {
	while [ "$1" ]; do
		case $1 in
		-v|--version)
			echo "finddeps-linked (pkgmaint) @VERSION@"
			exit 0
			;;
		-h|--help)
			print_help
			exit 0
			;;
		-*)
			echo "finddeps-linked: invalid option $1"
			exit 1
			;;
		*)
			PKGNAME=$1
			;;
		esac
		shift
	done

	if [ -z "$PKGNAME" ]; then
		echo "finddeps-linked: option missing"
		exit 2
	elif ! pkgman isinst "$PKGNAME" >/dev/null 2>&1; then
		echo "finddeps-linked: $PKGNAME is not installed"
		exit 3
	fi

	finddeps "$PKGNAME"
}

interrupted() {
	echo
	echo "=======> Aborted."
	exit 1
}

atexit() {
	[ -f "$TMPFILE1" ] && rm "$TMPFILE1"
	[ -f "$TMPFILE2" ] && rm "$TMPFILE2"
}

trap "interrupted" HUP INT QUIT TERM
trap "atexit" EXIT

export LC_ALL=POSIX

# Adjust to suckless core.
if command -v nproc >/dev/null 2>&1; then
	JOBS=$(nproc)                           # gnu coreutils
elif getconf _NPROCESSORS_ONLN >/dev/null 2>&1; then
	JOBS=$(getconf _NPROCESSORS_ONLN)       # suckless sbase
else
	JOBS=$(grep -c processor /proc/cpuinfo) # linuxism
fi

TMPFILE1=
TMPFILE2=

main "$@"

# End of file.
