#!/bin/sh
# This file is part of pkgmaint.
# See COPYING and COPYRIGHT files for corresponding information.

######################################################################
# Informational helpers.                                             #
######################################################################

info() {
	echo "=======> $1"
}

fatal() {
	echo >&2 "@ARGV0@: $1"
	exit 1
}

######################################################################
# Exit hooks.                                                        #
######################################################################

# Don't warn about unreachable commands in these functions, see
# trap(1p).

# shellcheck disable=2317
interrupted() {
	echo >&2 ""
	echo >&2 "=======> Aborted."
	exit 1
}

# shellcheck disable=2317
atexit() {
	[ -f "$TMPFILE1" ] && rm -f "$TMPFILE1"
	[ -f "$TMPFILE2" ] && rm -f "$TMPFILE2"
}

######################################################################
# Finddisowned.                                                      #
######################################################################

finddisowned() {
	# https://tldp.org/LDP/abs/html/exitcodes.html
	# 126 - Command invoked cannot execute.
	TMPFILE1=$(mktemp) || exit 126
	TMPFILE2=$(mktemp) || exit 126

	info "Get all known files from package database"
	sort -u "$ROOT/var/lib/pkg/db" > "$TMPFILE1"

	info "Get search paths from configuration file"
	#PATHS=$(xargs < "$(readlink -f "$CONF")")
	while read -r _PATH; do
		# skip comments and empty lines
		case $_PATH in \#* | "" ) continue ;; esac

		PATHS="$PATHS $_PATH"
	done < "$(readlink -f "$CONF")"

	info "Search files that are disowned by package manager"
	(
	cd "${ROOT:-/}" || exit 1

	# Intentional word splitting for PATHS.
	# shellcheck disable=2086
	find $PATHS \( -type d -printf '%p/\n' -o -print \) |
		sort > "$TMPFILE2"
	)
	comm -23 "$TMPFILE2" "$TMPFILE1"
}

######################################################################
# Command-line helpers.                                              #
######################################################################

print_help() {
	cat <<EOF
Usage: @ARGV0@ [OPTION]...
Find files that are disowned by package manager.

  -r, --root=PATH     specify an alternative root directory
  -c, --config=FILE   specify an alternative configuration file
  -v, --version       print version and exit
  -h, --help          print help and exit
EOF
}

print_version() {
	echo "@ARGV0@ (pkgmaint) @VERSION@"
}

parse_options() {
	eval set -- "$(
		getopt  -n "@ARGV0@" -a                  \
			-l "root:,config:,version,help"  \
			-o "r:c:vh" -- "$@"
	)"
	while true; do
		case $1 in
		-r|   --root) ROOT=$2        ; shift  ;;
		-c| --config) CONF=$2        ; shift  ;;
		-v|--version) print_version  ; exit 0 ;;
		-h|   --help) print_help     ; exit 0 ;;
		          --) shift          ; break  ;;
		           *) fatal "internal error"  ;;
		esac
		shift
	done
	CONF=${CONF:-"$ROOT/etc/finddisowned.conf"}
}

main() {
	parse_options "$@"

	[ -f "$CONF" ] || fatal "configuration file not found: $CONF"

	finddisowned
}

######################################################################

# -e: Exit if command return status greater than 0
# -f: Disable globbing *?[]
set -ef

# Set exit hooks.
trap "interrupted" HUP  INT  QUIT  TERM
trap "atexit"      EXIT

# Globals.
export LC_ALL=POSIX
TMPFILE1=
TMPFILE2=

######################################################################

main "$@"

# vim: cc=72:tw=70
# End of file.
