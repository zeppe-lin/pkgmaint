#!/bin/sh
# finddisowned - find files that are disowned by package manager
# See COPYING and COPYRIGHT files for corresponding information.

######################################################################
# Notification helpers.                                              #
######################################################################

info() {
	echo "=======> $1"
}

error() {
	info "ERROR: $1" 1>&2
}

######################################################################
# Exit hooks.                                                        #
######################################################################

# Don't warn about unreachable commands in these functions, see
# trap(1p).

# shellcheck disable=2317
interrupted() {
	echo ""             1>&2
	info "Interrupted." 1>&2
	exit 1
}

# shellcheck disable=2317
atexit() {
	if [ -f "$TMPFILE1" ]; then  rm -f "$TMPFILE1";  fi
	if [ -f "$TMPFILE2" ]; then  rm -f "$TMPFILE2";  fi
}

######################################################################
# Finddisowned.                                                      #
######################################################################

finddisowned() {
	# https://tldp.org/LDP/abs/html/exitcodes.html
	# 126 - Command invoked cannot execute.
	TMPFILE1=$(mktemp) || exit 126
	TMPFILE2=$(mktemp) || exit 126

	info "Get all known files from package database"
	sort -u "$ROOT/var/lib/pkg/db" > "$TMPFILE1"

	info "Get search paths from configuration file"
	#_paths=$(xargs < "$(readlink -f "$CONF")")
	while read -r _path; do
		# skip comments and empty lines
		case $_path in \#* | "" ) continue ;; esac

		_paths="$_paths $_path"
	done < "$(readlink -f "$CONF")"

	info "Search files that are disowned by package manager"
	(
		cd "${ROOT:-/}" || exit 1

		# Intentional word splitting for _paths.
		# shellcheck disable=2086
		find $_paths \( -type d -printf '%p/\n' -o -print \) |
			sort > "$TMPFILE2"
	)
	comm -23 "$TMPFILE2" "$TMPFILE1"
}

######################################################################
# Command-line helpers.                                              #
######################################################################

print_help() {
	cat <<EOF
Usage: $ARGV0 [-c conffile] [-r rootdir]
       $ARGV0 [-v]
       $ARGV0 [-h]
Find files that are disowned by package manager.

Mandatory arguments to long options are mandatory for short options too.
  -c, --config=conffile  specify an alternate configuration file
  -r, --root=rootdir     specify an alternate root directory
  -v, --version          print version and exit
  -h, --help             print help and exit
EOF
}

print_version() {
	echo "$ARGV0 (pkgmaint) @VERSION@"
}

parse_options() {
	if ! _opts=$(getopt -a -n "$ARGV0" -l "$LOPTS" -o "$SOPTS" -- "$@"); then
		echo "Try '$ARGV0 --help' for more information." 1>&2
		exit 1
	fi

	eval set -- "$_opts"; unset _opts
	while true; do
		case $1 in
		-c| --config) CONF=$2        ; shift  ;;
		-r|   --root) ROOT=$2        ; shift  ;;
		-v|--version) print_version  ; exit 0 ;;
		-h|   --help) print_help     ; exit 0 ;;
		          --) shift          ; break  ;;
		esac
		shift
	done
	ROOT=${ROOT:-""}
	CONF=${CONF:-"$ROOT/etc/finddisowned.conf"}
}

main() {
	parse_options "$@"

	if [ ! -d "$ROOT" ]; then
		echo "$ARGV0: root directory '$ROOT' not found" 1>&2
		exit 1
	fi

	if [ ! -f "$CONF" ]; then
		echo "$ARGV0: configuration file '$FILE' not found" 1>&2
		exit 1
	fi

	finddisowned
}

######################################################################

# -e: Exit if command return status greater than 0
# -f: Disable globbing *?[]
set -ef

# Set exit hooks.
trap "interrupted" HUP  INT  QUIT  TERM
trap "atexit"      EXIT

# Globals.
export LC_ALL=POSIX
readonly ARGV0="${0##*/}"
readonly LOPTS="config:,root:,version,help"
readonly SOPTS="c:r:vh"
TMPFILE1=
TMPFILE2=

######################################################################

main "$@"

# vim: cc=72 tw=70
# End of file.
